apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /tmp/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        variables_hash_max_size 2056;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        server {
            listen 8443 ssl;

            server_name         backend.example.com;
            ssl_certificate     /etc/nginx/certs/backend.example.com.crt;
            ssl_certificate_key /etc/nginx/certs/backend.example.com.key;

            location / {
                return 200 "Hello";
            }
        }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-tls
type: Opaque
data:
  backend.example.com.crt: # insert base64 encoded TLS cert
  backend.example.com.key: # insert base64 encoded TLS key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginxinc/nginx-unprivileged:latest
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: backend-tls
              mountPath: /etc/nginx/certs
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: backend-tls
          secret:
            secretName: backend-tls
